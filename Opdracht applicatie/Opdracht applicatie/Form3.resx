<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAf//Z
</value>
  </data>
</root>